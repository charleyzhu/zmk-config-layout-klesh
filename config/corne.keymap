/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&mt LEFT_GUI TAB       &kp Q       &kp W        &kp E         &kp R        &kp T        &kp Y      &kp U            &kp I            &kp O        &kp P          &mt RGUI BSPC
&mt LCTRL GRAVE        &mt LALT A  &mt LSHFT S  &mt LGUI D    &mt LCTRL F  &kp G        &kp H      &mt RCTRL J      &mt RGUI K       &mt RSHFT L  &mt RALT SEMI  &mt RCTRL ENTER
&mt LSHIFT LEFT_ARROW  &kp Z       &kp X        &kp C         &kp V        &kp B        &kp N      &kp M            &kp COMMA        &kp DOT      &kp FSLH       &mt RSHFT RIGHT_ARROW
                                                &mt LALT TAB  &lt 0 ENTER  &lt 3 ESC    &lt 3 RET  &mt RSHFT SPACE  &lt 2 BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &kp PAGE_UP      &kp DOWN_ARROW  &kp N7        &kp N8        &kp N9        &trans     &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &kp INSERT       &kp MINUS       &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PLUS   &trans
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &kp PAGE_DOWN    &kp ASTERISK    &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH  &trans
                         &trans   &trans   &trans           &kp NUMBER_0    &trans        &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp SQT  &kp DOUBLE_QUOTES  &kp EXCLAMATION  &kp ASTERISK          &kp TILDE                &trans         &kp UNDER         &trans             &kp GRAVE       &kp PIPE         &mt RSHFT DELETE
&trans  &kp AT   &kp HASH           &kp DOLLAR       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &trans         &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &trans
&trans  &trans   &kp PERCENT        &trans           &kp CARET             &kp BSLH                 &kp AMPERSAND  &trans            &trans             &kp EQUAL       &trans           &trans
                                    &trans           &trans                &trans                   &trans         &trans            &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
