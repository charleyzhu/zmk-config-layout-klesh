/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20

/ {
    behaviors {
        tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&tp LEFT_GUI TAB  &kp Q         &kp W           &kp E           &kp R        &kp T          &kp Y      &kp U            &kp I            &kp O       &kp P            &tp RGUI BSPC
&tp LCTRL GRAVE   &tp LSHIFT A  &tp LS(LALT) S  &tp LGUI D      &tp LCTRL F  &kp G          &kp H      &tp RCTRL J      &tp RGUI K       &tp RALT L  &tp RSHIFT SEMI  &tp RCTRL ENTER
&kp LSHIFT        &kp Z         &kp X           &kp C           &kp V        &kp B          &kp N      &kp M            &kp COMMA        &kp DOT     &kp FSLH         &kp ESC
                                                &lt 5 LEFT_GUI  &lt 1 ENTER  &lt 3 SPACE    &lt 3 RET  &tp RSHFT SPACE  &lt 2 BACKSPACE
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &kp PAGE_UP      &kp KP_EQUAL  &kp N7        &kp N8        &kp N9        &trans       &trans
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &kp INSERT       &kp MINUS     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp KP_PLUS  &trans
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &kp PAGE_DOWN    &kp ASTERISK  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp SLASH    &trans
                         &trans   &trans   &trans           &kp NUMBER_0  &kp PERIOD    &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp SQT  &kp DOUBLE_QUOTES  &kp EXCLAMATION  &kp ASTERISK          &kp TILDE                &none          &kp UNDER         &none              &kp GRAVE       &kp PIPE         &tp RSHFT DELETE
&trans  &kp AT   &kp HASH           &kp DOLLAR       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &none          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE  &trans
&trans  &none    &kp PERCENT        &none            &kp CARET             &kp BSLH                 &kp AMPERSAND  &none             &none              &kp EQUAL       &none            &trans
                                    &none            &none                 &none                    &none          &none             &none
            >;
        };

        control_layer {
            bindings = <
&trans        &tp LALT F4  &tp LCTRL RIGHT  &kp END     &none      &trans            &kp LS(C_AC_BACK)  &tp RCTRL PAGE_UP  &tp RCTRL PAGE_DOWN  &kp C_AC_FORWARD  &kp C_PREVIOUS    &trans
&trans        &kp HOME     &kp BACKSPACE    &kp DELETE  &none      &none             &kp LEFT           &kp DOWN           &kp UP_ARROW         &kp RIGHT         &none             &trans
&kp LG(LEFT)  &none        &none            &kp LG(C)   &kp LG(V)  &tp LCTRL LEFT    &kp C_NEXT         &kp C_MUTE         &kp C_VOLUME_DOWN    &kp C_VOLUME_UP   &kp C_PLAY_PAUSE  &kp LG(RIGHT)
                                            &none       &none      &mo 4             &kp CAPSLOCK       &none              &none
            >;
        };

        Keyboard-Control {
            bindings = <
&sys_reset  &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };

        mous_control {
            bindings = <
&none  &none  &none  &none  &none  &none    &none           &none           &none         &none            &none  &none
&none  &none  &none  &none  &none  &none    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &none  &none
&none  &none  &none  &none  &none  &none    &none           &none           &none         &none            &none  &none
                     &none  &none  &none    &none           &mkp LCLK       &mkp RCLK
            >;
        };
    };
};
